from PyQt5 import QtCore, QtGui, QtWidgets
import res_rc


class Ui_Editor(object):
    def setupUi(self, Editor):
        Editor.setObjectName("Editor")
        Editor.resize(800, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/img/resources/imgs/_app_icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Editor.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(Editor)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setChildrenCollapsible(False)
        self.splitter_2.setObjectName("splitter_2")
        self.textEdit = QtWidgets.QTextEdit(self.splitter_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.chatbot_frame = QtWidgets.QFrame(self.splitter_2)
        self.chatbot_frame.setMaximumSize(QtCore.QSize(400, 16777215))
        self.chatbot_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.chatbot_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.chatbot_frame.setObjectName("chatbot_frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.chatbot_frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter = QtWidgets.QSplitter(self.chatbot_frame)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.prompt = QtWidgets.QTextEdit(self.splitter)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.prompt.setFont(font)
        self.prompt.setObjectName("prompt")
        self.response = QtWidgets.QTextEdit(self.splitter)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.response.setFont(font)
        self.response.setObjectName("response")
        self.verticalLayout.addWidget(self.splitter)
        self.frame = QtWidgets.QFrame(self.chatbot_frame)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.send_pushButton = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.send_pushButton.setFont(font)
        self.send_pushButton.setStyleSheet("background-color: rgb(0, 170, 127);\n"
"color: rgb(255, 255, 255);")
        self.send_pushButton.setObjectName("send_pushButton")
        self.horizontalLayout.addWidget(self.send_pushButton)
        self.insert_pushButton = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.insert_pushButton.setFont(font)
        self.insert_pushButton.setStyleSheet("background-color: rgb(0, 0, 255);\n"
"color: rgb(255, 255, 255);")
        self.insert_pushButton.setObjectName("insert_pushButton")
        self.horizontalLayout.addWidget(self.insert_pushButton)
        self.verticalLayout.addWidget(self.frame)
        self.horizontalLayout_2.addWidget(self.splitter_2)
        Editor.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Editor)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEidt = QtWidgets.QMenu(self.menubar)
        self.menuEidt.setObjectName("menuEidt")
        self.menuChange = QtWidgets.QMenu(self.menubar)
        self.menuChange.setObjectName("menuChange")
        self.menuInsert = QtWidgets.QMenu(self.menubar)
        self.menuInsert.setObjectName("menuInsert")
        self.menuAssistant = QtWidgets.QMenu(self.menubar)
        self.menuAssistant.setObjectName("menuAssistant")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        Editor.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Editor)
        self.statusbar.setObjectName("statusbar")
        Editor.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(Editor)
        self.toolBar.setMovable(False)
        self.toolBar.setObjectName("toolBar")
        Editor.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(Editor)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/img/resources/imgs/new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon1)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(Editor)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/img/resources/imgs/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon2)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(Editor)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/img/resources/imgs/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon3)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(Editor)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/img/resources/imgs/save_as.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_As.setIcon(icon4)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionCut = QtWidgets.QAction(Editor)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Cut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon5)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(Editor)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Copy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon6)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(Editor)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Paste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon7)
        self.actionPaste.setObjectName("actionPaste")
        self.actionAlign_Left = QtWidgets.QAction(Editor)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_align_left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAlign_Left.setIcon(icon8)
        self.actionAlign_Left.setObjectName("actionAlign_Left")
        self.actionAligh_Right = QtWidgets.QAction(Editor)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_align_right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAligh_Right.setIcon(icon9)
        self.actionAligh_Right.setObjectName("actionAligh_Right")
        self.actionAlign_Center = QtWidgets.QAction(Editor)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_align_center.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAlign_Center.setIcon(icon10)
        self.actionAlign_Center.setObjectName("actionAlign_Center")
        self.actionAlign_Justify = QtWidgets.QAction(Editor)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_align_justify.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAlign_Justify.setIcon(icon11)
        self.actionAlign_Justify.setObjectName("actionAlign_Justify")
        self.actionBold = QtWidgets.QAction(Editor)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_bold.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBold.setIcon(icon12)
        self.actionBold.setObjectName("actionBold")
        self.actionItalics = QtWidgets.QAction(Editor)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/img/resources/imgs/text_italic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionItalics.setIcon(icon13)
        self.actionItalics.setObjectName("actionItalics")
        self.actionUnderline = QtWidgets.QAction(Editor)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/img/resources/imgs/underline_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUnderline.setIcon(icon14)
        self.actionUnderline.setObjectName("actionUnderline")
        self.actionUndo = QtWidgets.QAction(Editor)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon15)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(Editor)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon16)
        self.actionRedo.setObjectName("actionRedo")
        self.actionFont_Options = QtWidgets.QAction(Editor)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/img/resources/imgs/font.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFont_Options.setIcon(icon17)
        self.actionFont_Options.setObjectName("actionFont_Options")
        self.actionChange_Font_Color = QtWidgets.QAction(Editor)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/img/resources/imgs/change_text_color.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionChange_Font_Color.setIcon(icon18)
        self.actionChange_Font_Color.setObjectName("actionChange_Font_Color")
        self.actionChange_Background_Color = QtWidgets.QAction(Editor)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/img/resources/imgs/bg_color.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionChange_Background_Color.setIcon(icon19)
        self.actionChange_Background_Color.setObjectName("actionChange_Background_Color")
        self.actionInsert_Date = QtWidgets.QAction(Editor)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Calendar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsert_Date.setIcon(icon20)
        self.actionInsert_Date.setObjectName("actionInsert_Date")
        self.actionInsert_Time = QtWidgets.QAction(Editor)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Clock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsert_Time.setIcon(icon21)
        self.actionInsert_Time.setObjectName("actionInsert_Time")
        self.actionExport_to_PDF = QtWidgets.QAction(Editor)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/img/resources/imgs/doc_pdf.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_to_PDF.setIcon(icon22)
        self.actionExport_to_PDF.setObjectName("actionExport_to_PDF")
        self.actionPrint_Preview = QtWidgets.QAction(Editor)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint_Preview.setIcon(icon23)
        self.actionPrint_Preview.setObjectName("actionPrint_Preview")
        self.actionPrint = QtWidgets.QAction(Editor)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/img/resources/imgs/Print.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint.setIcon(icon24)
        self.actionPrint.setObjectName("actionPrint")
        self.actionOpen_Assistant = QtWidgets.QAction(Editor)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/img/resources/imgs/bot.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Assistant.setIcon(icon25)
        self.actionOpen_Assistant.setObjectName("actionOpen_Assistant")
        self.actionSelect_All = QtWidgets.QAction(Editor)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/img/resources/imgs/select_all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelect_All.setIcon(icon26)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionClear_All = QtWidgets.QAction(Editor)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/img/resources/imgs/clear_all.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear_All.setIcon(icon27)
        self.actionClear_All.setObjectName("actionClear_All")
        self.actionDeveloper = QtWidgets.QAction(Editor)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/img/resources/imgs/personal-information.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeveloper.setIcon(icon28)
        self.actionDeveloper.setObjectName("actionDeveloper")
        self.actionAbout_App = QtWidgets.QAction(Editor)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/img/resources/imgs/app_info.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout_App.setIcon(icon29)
        self.actionAbout_App.setObjectName("actionAbout_App")
        self.actionParaphrase_Text = QtWidgets.QAction(Editor)
        self.actionParaphrase_Text.setObjectName("actionParaphrase_Text")
        self.actionSummarize_Text = QtWidgets.QAction(Editor)
        self.actionSummarize_Text.setObjectName("actionSummarize_Text")
        self.actionExit = QtWidgets.QAction(Editor)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/img/resources/imgs/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon30)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addAction(self.actionPrint_Preview)
        self.menuFile.addAction(self.actionExport_to_PDF)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEidt.addAction(self.actionCopy)
        self.menuEidt.addAction(self.actionCut)
        self.menuEidt.addAction(self.actionPaste)
        self.menuEidt.addSeparator()
        self.menuEidt.addAction(self.actionUndo)
        self.menuEidt.addAction(self.actionRedo)
        self.menuEidt.addSeparator()
        self.menuEidt.addAction(self.actionSelect_All)
        self.menuChange.addAction(self.actionChange_Font_Color)
        self.menuChange.addAction(self.actionChange_Background_Color)
        self.menuInsert.addAction(self.actionInsert_Time)
        self.menuInsert.addAction(self.actionInsert_Date)
        self.menuAssistant.addAction(self.actionOpen_Assistant)
        self.menuAssistant.addAction(self.actionParaphrase_Text)
        self.menuAssistant.addAction(self.actionSummarize_Text)
        self.menuAbout.addAction(self.actionDeveloper)
        self.menuAbout.addAction(self.actionAbout_App)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEidt.menuAction())
        self.menubar.addAction(self.menuChange.menuAction())
        self.menubar.addAction(self.menuInsert.menuAction())
        self.menubar.addAction(self.menuAssistant.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCut)
        self.toolBar.addAction(self.actionCopy)
        self.toolBar.addAction(self.actionPaste)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionBold)
        self.toolBar.addAction(self.actionItalics)
        self.toolBar.addAction(self.actionUnderline)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAlign_Left)
        self.toolBar.addAction(self.actionAlign_Center)
        self.toolBar.addAction(self.actionAligh_Right)
        self.toolBar.addAction(self.actionAlign_Justify)

        # Combo
        self.toolBar.addSeparator()
        self.fontcombo = QtWidgets.QFontComboBox()
        self.fontcombo.setCurrentFont(font)
        self.toolBar.addWidget(self.fontcombo)

        self.toolBar.addSeparator()

        self.font_size = QtWidgets.QSpinBox()
        self.font_size.setValue(12)
        self.toolBar.addWidget(self.font_size)

        self.toolBar.addSeparator()
        # =======================

        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUndo)
        self.toolBar.addAction(self.actionRedo)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionFont_Options)
        self.toolBar.addAction(self.actionChange_Font_Color)
        self.toolBar.addAction(self.actionChange_Background_Color)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionExport_to_PDF)
        self.toolBar.addAction(self.actionPrint_Preview)
        self.toolBar.addAction(self.actionPrint)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionInsert_Date)
        self.toolBar.addAction(self.actionInsert_Time)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOpen_Assistant)

        self.retranslateUi(Editor)
        QtCore.QMetaObject.connectSlotsByName(Editor)

    def retranslateUi(self, Editor):
        _translate = QtCore.QCoreApplication.translate
        Editor.setWindowTitle(_translate("Editor", "Tommy\'s Docs"))
        self.prompt.setPlaceholderText(_translate("Editor", "Tell me something...."))
        self.send_pushButton.setText(_translate("Editor", "Send"))
        self.insert_pushButton.setText(_translate("Editor", "Insert into editor"))
        self.menuFile.setTitle(_translate("Editor", "File"))
        self.menuEidt.setTitle(_translate("Editor", "Eidt"))
        self.menuChange.setTitle(_translate("Editor", "Change"))
        self.menuInsert.setTitle(_translate("Editor", "Insert"))
        self.menuAssistant.setTitle(_translate("Editor", "Assistant"))
        self.menuAbout.setTitle(_translate("Editor", "About"))
        self.toolBar.setWindowTitle(_translate("Editor", "toolBar"))
        self.actionNew.setText(_translate("Editor", "New"))
        self.actionNew.setToolTip(_translate("Editor", "Create a new file"))
        self.actionNew.setShortcut(_translate("Editor", "Ctrl+N"))
        self.actionOpen.setText(_translate("Editor", "Open"))
        self.actionOpen.setToolTip(_translate("Editor", "Open a file"))
        self.actionOpen.setShortcut(_translate("Editor", "Ctrl+O"))
        self.actionSave.setText(_translate("Editor", "Save"))
        self.actionSave.setToolTip(_translate("Editor", "Save this file"))
        self.actionSave.setShortcut(_translate("Editor", "Ctrl+S"))
        self.actionSave_As.setText(_translate("Editor", "Save As"))
        self.actionSave_As.setToolTip(_translate("Editor", "Save as"))
        self.actionSave_As.setShortcut(_translate("Editor", "Ctrl+Alt+ß"))
        self.actionCut.setText(_translate("Editor", "Cut"))
        self.actionCut.setToolTip(_translate("Editor", "Cut"))
        self.actionCut.setShortcut(_translate("Editor", "Ctrl+X"))
        self.actionCopy.setText(_translate("Editor", "Copy"))
        self.actionCopy.setToolTip(_translate("Editor", "Copy selected text"))
        self.actionCopy.setShortcut(_translate("Editor", "Ctrl+C"))
        self.actionPaste.setText(_translate("Editor", "Paste"))
        self.actionPaste.setToolTip(_translate("Editor", "Paste text"))
        self.actionPaste.setShortcut(_translate("Editor", "Ctrl+V"))
        self.actionAlign_Left.setText(_translate("Editor", "Align Left"))
        self.actionAlign_Left.setToolTip(_translate("Editor", "Align text to the left"))
        self.actionAlign_Left.setShortcut(_translate("Editor", "Ctrl+L"))
        self.actionAligh_Right.setText(_translate("Editor", "Aligh Right"))
        self.actionAligh_Right.setToolTip(_translate("Editor", "Align text to the right"))
        self.actionAligh_Right.setShortcut(_translate("Editor", "Ctrl+R"))
        self.actionAlign_Center.setText(_translate("Editor", "Align Center"))
        self.actionAlign_Center.setToolTip(_translate("Editor", "Aling text to the center"))
        self.actionAlign_Center.setShortcut(_translate("Editor", "Ctrl+E"))
        self.actionAlign_Justify.setText(_translate("Editor", "Align Justify"))
        self.actionAlign_Justify.setToolTip(_translate("Editor", "Justify text alignment"))
        self.actionAlign_Justify.setShortcut(_translate("Editor", "Ctrl+J"))
        self.actionBold.setText(_translate("Editor", "Bold"))
        self.actionBold.setToolTip(_translate("Editor", "Make text bold"))
        self.actionBold.setShortcut(_translate("Editor", "Ctrl+B"))
        self.actionItalics.setText(_translate("Editor", "Italics"))
        self.actionItalics.setToolTip(_translate("Editor", "Italicisize text"))
        self.actionItalics.setShortcut(_translate("Editor", "Ctrl+I"))
        self.actionUnderline.setText(_translate("Editor", "Underline"))
        self.actionUnderline.setToolTip(_translate("Editor", "Underline text"))
        self.actionUndo.setText(_translate("Editor", "Undo"))
        self.actionUndo.setToolTip(_translate("Editor", "Undo recent activity"))
        self.actionUndo.setShortcut(_translate("Editor", "Ctrl+Z"))
        self.actionRedo.setText(_translate("Editor", "Redo"))
        self.actionRedo.setToolTip(_translate("Editor", "Redo recent activity"))
        self.actionRedo.setShortcut(_translate("Editor", "Ctrl+Y"))
        self.actionFont_Options.setText(_translate("Editor", "Font Options"))
        self.actionFont_Options.setToolTip(_translate("Editor", "Change font options"))
        self.actionChange_Font_Color.setText(_translate("Editor", "Change Font Color"))
        self.actionChange_Font_Color.setToolTip(_translate("Editor", "Change font color"))
        self.actionChange_Background_Color.setText(_translate("Editor", "Change Background Color"))
        self.actionChange_Background_Color.setToolTip(_translate("Editor", "Change background color"))
        self.actionInsert_Date.setText(_translate("Editor", "Insert Date"))
        self.actionInsert_Date.setToolTip(_translate("Editor", "Insert today\'s date"))
        self.actionInsert_Time.setText(_translate("Editor", "Insert Time"))
        self.actionInsert_Time.setToolTip(_translate("Editor", "Insert current time"))
        self.actionExport_to_PDF.setText(_translate("Editor", "Export to PDF"))
        self.actionExport_to_PDF.setToolTip(_translate("Editor", "Export document as pdf"))
        self.actionExport_to_PDF.setShortcut(_translate("Editor", "Alt+Shift+E"))
        self.actionPrint_Preview.setText(_translate("Editor", "Print Preview"))
        self.actionPrint_Preview.setToolTip(_translate("Editor", "open print preview"))
        self.actionPrint.setText(_translate("Editor", "Print"))
        self.actionPrint.setToolTip(_translate("Editor", "Print document"))
        self.actionPrint.setShortcut(_translate("Editor", "Ctrl+P"))
        self.actionOpen_Assistant.setText(_translate("Editor", "Open Assistant"))
        self.actionOpen_Assistant.setToolTip(_translate("Editor", "Open Chatbot"))
        self.actionSelect_All.setText(_translate("Editor", "Select All"))
        self.actionSelect_All.setToolTip(_translate("Editor", "Select all text"))
        self.actionSelect_All.setShortcut(_translate("Editor", "Ctrl+A"))
        self.actionClear_All.setText(_translate("Editor", "Clear All"))
        self.actionClear_All.setToolTip(_translate("Editor", "Clear all text"))
        self.actionClear_All.setShortcut(_translate("Editor", "Shift+Del"))
        self.actionDeveloper.setText(_translate("Editor", "Developer"))
        self.actionDeveloper.setToolTip(_translate("Editor", "About the developer"))
        self.actionAbout_App.setText(_translate("Editor", "About App"))
        self.actionAbout_App.setToolTip(_translate("Editor", "About App"))
        self.actionParaphrase_Text.setText(_translate("Editor", "Paraphrase Text"))
        self.actionParaphrase_Text.setToolTip(_translate("Editor", "Paraphrase selected text"))
        self.actionSummarize_Text.setText(_translate("Editor", "Summarize Text"))
        self.actionSummarize_Text.setToolTip(_translate("Editor", "Summarize selected text"))
        self.actionExit.setText(_translate("Editor", "Exit"))
        self.actionExit.setShortcut(_translate("Editor", "Ctrl+Q"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Editor = QtWidgets.QMainWindow()
    ui = Ui_Editor()
    ui.setupUi(Editor)
    Editor.show()
    sys.exit(app.exec_())
